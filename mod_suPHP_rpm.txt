yum install http://repo.okay.com.mx/centos/7/x86_64/release/mod_suphp-0.7.2-1.el7.centos.x86_64.rpm


eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_ecdsa


/usr/lib/systemd/system/httpd.service
/etc/systemd/system/multi-user.target.wants/httpd.service

[Unit]
Description=Web server Apache
After=network.target

[Service]
Type=forking
ExecStart=/usr/local/apache/bin/apachectl start
ExecReload=/usr/local/apache/bin/apachectl graceful
ExecStop=/usr/local/apache/bin/apachectl graceful-stop

[Install]
WantedBy=multi-user.target

[Service]
LimitNOFILE=65535


        <IfModule mod_proxy.c>
                ProxyRequests Off
                ProxyPreserveHost On
                ProxyVia Full

                # Exclude the specific path from being proxied
                ProxyPass /pdftool/pdf_tool/ !

                # Proxy other requests to Node.js
                ProxyPass / http://127.0.0.1:3000/
                ProxyPassReverse / http://127.0.0.1:3000/

                <Proxy *>
                        AllowOverride All
                        Require all granted
                </Proxy>
        </IfModule>




./configure --prefix=/usr/local/nginx --with-pcre=../pcre-8.42 --with-zlib=../zlib-1.2.11 --with-openssl=../openssl-1.1.0h --with-http_ssl_module --add-module=../nginx-rtmp-module --user=nginx --group=nginx
________________________________________________________________________________________________________________________________________________________


worker_processes  auto;
events {
    worker_connections  1024;
}

# RTMP configuration
rtmp {
    server {
        listen 1935; # Listen on standard RTMP port
        chunk_size 4000;

# Define the Application
        application show {
            live on;
            # Turn on HLS
            hls on;
            hls_path /mnt/hls/;
            hls_fragment 3;
            hls_playlist_length 60;
            # disable consuming the stream from nginx as rtmp
            deny play all;
        }

    }
}

http {
    sendfile off;
    tcp_nopush on;
    directio 512;
    default_type application/octet-stream;

    server {
        listen 8080;

        location / {
            # Disable cache
            add_header 'Cache-Control' 'no-cache';

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            types {
                application/dash+xml mpd;
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            root /mnt/;
        }
    }
}

mkdir -p /mnt/hls



openssl pkcs12 -export -out j2vproject.pkcs12 -inkey stream.blessingtv.tv.key -in stream.crt -certfile stream_ca.crt


keytool -v -importkeystore -srckeystore j2vproject.pkcs12 -srcstoretype PKCS12  -destkeystore stream.blessingtv.jks -deststoretype JKS






###################nginx.conf###################### nginx-rtmp
user nginx;
worker_processes  auto;
#server_tokens off;
events {
    worker_connections  1024;
}
# We need to setup an rmtp server to stream video from client devices
rtmp {
    server {
      listen 1935;
      chunk_size 4096;
      max_message 1M;
      ping 30s;
      notify_method get;
      allow play all;
       # rmtp handler our clients connect to for live streaming, it runs on port 1935. It converts the stream to HLS and stores it on our server

   application live {
         allow play all;
         allow publish 65.108.227.52; #nginx
         allow publish 65.108.227.52; #encoder
          live on;
          exec ffmpeg -re -i rtmp://65.108.227.52/live/$name -threads 1
                        -c:v libx264 -profile:v baseline -b:v 384K -s 426x240
-vf "drawtext=fontcolor=red:fontsize=20:fontfile=/usr/share/fonts/dejavu/DejaVuSans.ttf:text='240':x=10:y=10"
                        -f flv -c:a aac -ac 1 -strict -2 -b:a 64k rtmp://65.108.227.52:1935/show/$name_240
                        -c:v libx264 -profile:v baseline -b:v 768K -s 640x360
-vf "drawtext= fontcolor=red: fontsize=20: fontfile=/usr/share/fonts/dejavu/DejaVuSans.ttf: text='360': x=10: y=10:"
                        -f flv -c:a aac -ac 1 -strict -2 -b:a 96k rtmp://65.108.227.52:1935/show/$name_360
                        -c:v libx264 -profile:v baseline -b:v 1024K -s 960x540
-vf "drawtext= fontcolor=red: fontsize=20: fontfile=/usr/share/fonts/dejavu/DejaVuSans.ttf: text='480': x=10: y=10:"
                        -f flv -c:a aac -ac 1 -strict -2 -b:a 128k rtmp://65.108.227.52:1935/show/$name_480
                        -c:v libx264 -profile:v baseline -b:v 1920K -s 1280x720
-vf "drawtext= fontcolor=red: fontsize=20: fontfile=/usr/share/fonts/dejavu/DejaVuSans.ttf: text='720': x=10: y=10:"
                        -f flv -c:a aac -ac 1 -strict -2 -b:a 128k rtmp://65.108.227.52:1935/show/$name_720
                        -c:v libx264 -profile:v high -b:v 4000K -s 1920x1080
-vf "drawtext=fontcolor=red:fontsize=20:fontfile=/usr/share/fonts/dejavu/DejaVuSans.ttf:text='1080':x=10:y=10"
                        -f flv -c:a aac -ac 1 -strict -2 -b:a 128k rtmp://65.108.227.52:1935/show/$name_1080
                        ;
#          exec ffmpeg -i rtmp://localhost/$app/$name -async 1 -vsync -1 -c:v libx264 -c:a libvo_aacenc -b:v 256k -b:a 32k -vf "scale=480:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name_low -c:v libx264 -c:a libvo_aacenc -b:v 768k -b:a 96k -vf "scale=720:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name_mid -c:v libx264 -c:a libvo_aacenc -b:v 1024k -b:a 128k -vf "scale=960:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name_high -c:v libx264 -c:a libvo_aacenc -b:v 1920k -b:a 128k -vf "scale=1280:trunc(ow/a/2)*2" -tune zerolatency -preset veryfast -crf 23 -f flv rtmp://localhost/show/$name_hd720 -c copy -f flv rtmp://localhost/show/$name_src;
}
          application show {
          live on;
          hls on;
          hls_path /mnt/live;
          hls_fragment 2s;
          hls_playlist_length 10s;
          hls_sync 100ms;
          hls_continuous on;
          allow play all;
          allow publish 127.0.0.1;
          allow publish 65.108.227.52;
          allow publish 139.59.30.40;
          allow publish 0.0.0.0/0;
          #dash off;
          #dash_path /var/www/dash;
          #dash_fragment 10;
          # Instruct clients to adjust resolution according to bandwidth
            hls_variant _240 BANDWIDTH=415002,RESOLUTION=426x240,FRAME-RATE=24000.0000R2DvNMWIiK5pnUg_0_240.m3u8;
            hls_variant _360 BANDWIDTH=472075,RESOLUTION=640x360,FRAME-RATE=24000.0000R2DvNMWIiK5pnUg_1_360.m3u8;
            hls_variant _480 BANDWIDTH=667336,RESOLUTION=960x540,FRAME-RATE=24000.0000R2DvNMWIiK5pnUg_2_480.m3u8;
            hls_variant _720 BANDWIDTH=779182,RESOLUTION=1280x720,FRAME-RATE=24000.0000R2DvNMWIiK5pnUg_3_720.m3u8;
            hls_variant _1080 BANDWIDTH=4096000,RESOLUTION=1920x1080,FRAME-RATE=24000.0000R2DvNMWIiK5pnUg_4_1080.m3u8;
      #hls_variant _1080 BANDWIDTH=4096000;
          #  hls_variant _low BANDWIDTH=288000; # Low bitrate, sub-SD resolution
          #  hls_variant _mid BANDWIDTH=448000; # Medium bitrate, SD resolution
          #  hls_variant _high BANDWIDTH=1152000; # High bitrate, higher-than-SD resolution
          #  hls_variant _hd720 BANDWIDTH=2048000; # High bitrate, HD 720p resolution
          #  hls_variant _src BANDWIDTH=4096000; # Source bitrate, source resolution
          hls_nested on;  # create a new folder for each stream
          #record_notify on;
          #record_path /var/www/videos;
          #record all;
          #record_unique on;
     }

    application vod {
       play /var/www/videos;
    }
 }
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    sendfile        on;
    tcp_nopush     on;
    keepalive_timeout  65;
    gzip  on;

  server {
        listen 1043 ssl;
        server_name stream.webnexs.com;
        ssl_certificate /etc/pki/tls/certs/stream.webnexs.com.bundle;
        ssl_certificate_key /etc/pki/tls/private/stream.webnexs.com.key;
        #add_header 'Cache-Control' 'no-cache';
        #add_header 'Access-Control-Allow-Origin' '*';
        #add_header 'Access-Control-Expose-Headers' 'Content-Length';
        #add_header 'Access-Control-Max-Age' 1728000;
        #add_header 'Access-Control-Allow-Headers' 'Origin,Range,Accept-Encoding,Referer,Cache-Control';
        #add_header 'Access-Control-Expose-Headers' 'Server,Content-Length,Content-Range,Date';
        #add_header 'Access-Control-Allow-Methods' 'GET, HEAD, POST, OPTIONS, PUT, DELETE';
            location / {
            add_header 'Cache-Control' 'no-cache';

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';
            add_header Content-Security-Policy "connect-src 'self' https://stream.webnexs.com:1043";

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                add_header Content-Security-Policy "connect-src 'self' https://stream.webnexs.com:1043";
                return 204;
            }
            root   /mnt/live;

                #add_header 'Access-Control-Allow-Origin' '*';
                #add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                #add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                #add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            #rewrite ^(.*)$ /crossdomain.xml;
                        # Disable cache

            }
          # the http end point our web based users connect to see the live stream
          location /live {
            types {
                application/vnd.apple.mpegurl m3u8;
               video/MP2T ts;
               application/dash+xml     mpd;
             }
                 alias /mnt/live;
                #add_header 'Access-Control-Allow-Origin' '*';
                #add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                #add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                #add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
                             # Disable cache

#############

        #add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        #add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
###########3
}


}}

